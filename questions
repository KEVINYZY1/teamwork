此文档记录各个组员遇到的问题和解答

q1: 在《垃圾回收算法与实现》中第二章2.3.3节《与写时复制计数不兼容》中，谈到了写时复制时遇到的问题：即使没有重写对象，GC也会设置所有活动对象的标志位，这样就会频繁发生不应该发生的复制，压迫到内存空间。这句话如何理解？
是说，在若干个复制的进程中，只要有一个用到了gc，然后这时候各个对象，还在共享的对象，的object.mark位就会根据是不是还是存活的对象，object.mark被gc改写，所以这时候共享内存的时候发现内存变了，就需要写时复制一份出去，导致内存被消耗。是这样理解的吗？
